pipeline {
  agent any

  environment {
    IMAGE_NAME = "nodeapp1"
    CONTAINER_NAME = "nodeapp1"
    PORT = "3000"
  }

   options {
        skipDefaultCheckout() // avoids automatic SCM checkout before your clone
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                echo "üßπ Cleaning workspace"
                deleteDir() // wipes workspace
            }
        }

        stage('Clone') {
            steps {
                echo "üì• Cloning repository"
                sh '''
                    if ! command -v git &> /dev/null
                    then
                        echo "Git not found, installing..."
                        apt-get update && apt-get install -y git
                    fi
                    git clone https://github.com/hrithik-k0/CI-CD-Project.git .
                '''
            }
        }

    stage('Build') {
      steps {
        sh 'docker build -t $IMAGE_NAME:latest .'
      }
    }

    stage('Test') {
      steps {
        sh 'docker run -d -p $PORT:$PORT --name $CONTAINER_NAME $IMAGE_NAME:latest'
        sh './script/run-tests.sh'
        sh 'docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME'
      }
    }

    stage('Deploy') {
      steps {
        sh 'docker-compose up -d'
      }
    }
  }

  post {
    failure {
      echo "‚ùå Build failed. Check logs."
    }
    success {
      echo "‚úÖ Build succeeded. App deployed!"
    }
  }
}
